from pydantic import BaseModel, Field
from typing import List, Dict, Optional, Set
from datetime import datetime
from enum import Enum

from .vulnerability import Vulnerability, SeverityLevel

class VulnerabilitySource(str, Enum):
    """
    Sources of vulnerability data
    """
    NVD = "NVD"  # National Vulnerability Database
    GITHUB = "GITHUB"  # GitHub Security Advisories
    SNYK = "SNYK"  # Snyk Vulnerability Database
    OSINT = "OSINT"  # Open Source Intelligence (VulDB, Exploit-DB, etc.)
    INTERNAL = "INTERNAL"  # Internal findings
    OTHER = "OTHER"  # Other sources

class VulnerabilityStatus(str, Enum):
    """
    Status of a vulnerability in the database
    """
    ACTIVE = "ACTIVE"  # Active vulnerability
    FIXED = "FIXED"  # Fixed in newer versions
    FALSE_POSITIVE = "FALSE_POSITIVE"  # Confirmed false positive
    MITIGATED = "MITIGATED"  # Mitigated through other means
    ACCEPTED = "ACCEPTED"  # Accepted risk
    UNDER_REVIEW = "UNDER_REVIEW"  # Under review

class VulnerabilityDatabaseEntry(BaseModel):
    """
    Extended vulnerability model for database storage with additional metadata
    """
    vulnerability: Vulnerability
    sources: List[VulnerabilitySource] = Field(
        default_factory=lambda: [VulnerabilitySource.NVD],
        description="Sources of this vulnerability information"
    )
    status: VulnerabilityStatus = Field(
        default=VulnerabilityStatus.ACTIVE,
        description="Current status of this vulnerability"
    )
    affected_versions: List[str] = Field(
        default_factory=list,
        description="List of affected versions"
    )
    fixed_versions: List[str] = Field(
        default_factory=list,
        description="List of versions that fix this vulnerability"
    )
    discovered_date: Optional[datetime] = Field(
        default=None,
        description="Date when this vulnerability was discovered"
    )
    published_date: Optional[datetime] = Field(
        default=None,
        description="Date when this vulnerability was published"
    )
    last_updated: datetime = Field(
        default_factory=datetime.utcnow,
        description="Last time this entry was updated"
    )
    exploitability_score: Optional[float] = Field(
        default=None,
        description="Exploitability score (0.0-10.0)"
    )
    impact_score: Optional[float] = Field(
        default=None,
        description="Impact score (0.0-10.0)"
    )
    cwe_ids: List[str] = Field(
        default_factory=list,
        description="Common Weakness Enumeration IDs"
    )
    tags: Set[str] = Field(
        default_factory=set,
        description="Tags for categorization"
    )
    notes: Optional[str] = Field(
        default=None,
        description="Additional notes about this vulnerability"
    )
    metadata: Dict = Field(
        default_factory=dict,
        description="Additional metadata"
    )

    class Config:
        json_schema_extra = {
            "example": {
                "vulnerability": {
                    "id": "CVE-2021-44228",
                    "title": "Log4Shell",
                    "description": "Remote code execution vulnerability in Log4j",
                    "severity": "CRITICAL",
                    "cvss_score": 10.0,
                    "affected_component": "org.apache.logging.log4j:log4j-core",
                    "fix_version": "2.15.0",
                    "references": [
                        "https://nvd.nist.gov/vuln/detail/CVE-2021-44228",
                        "https://logging.apache.org/log4j/2.x/security.html"
                    ]
                },
                "sources": ["NVD", "GITHUB"],
                "status": "ACTIVE",
                "affected_versions": ["2.0-beta9", "2.0", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "2.10", "2.11", "2.12", "2.13", "2.14"],
                "fixed_versions": ["2.15.0", "2.16.0"],
                "discovered_date": "2021-12-09T00:00:00Z",
                "published_date": "2021-12-10T00:00:00Z",
                "last_updated": "2021-12-15T00:00:00Z",
                "exploitability_score": 10.0,
                "impact_score": 10.0,
                "cwe_ids": ["CWE-502", "CWE-400"],
                "tags": ["rce", "jndi", "ldap"],
                "notes": "Actively exploited in the wild",
                "metadata": {
                    "exploit_available": True,
                    "patch_complexity": "Low",
                    "attack_vector": "Network"
                }
            }
        }

class VulnerabilityDatabaseStats(BaseModel):
    """
    Statistics about the vulnerability database
    """
    total_entries: int = Field(..., description="Total number of vulnerability entries")
    by_severity: Dict[SeverityLevel, int] = Field(
        default_factory=dict,
        description="Count of vulnerabilities by severity"
    )
    by_status: Dict[VulnerabilityStatus, int] = Field(
        default_factory=dict,
        description="Count of vulnerabilities by status"
    )
    by_source: Dict[VulnerabilitySource, int] = Field(
        default_factory=dict,
        description="Count of vulnerabilities by source"
    )
    last_updated: datetime = Field(
        default_factory=datetime.utcnow,
        description="Last time the database was updated"
    )

class VulnerabilityDatabaseQuery(BaseModel):
    """
    Query parameters for searching the vulnerability database
    """
    cve_id: Optional[str] = Field(
        default=None,
        description="CVE ID to search for"
    )
    component: Optional[str] = Field(
        default=None,
        description="Component name to search for"
    )
    severity: Optional[List[SeverityLevel]] = Field(
        default=None,
        description="Severity levels to include"
    )
    status: Optional[List[VulnerabilityStatus]] = Field(
        default=None,
        description="Status values to include"
    )
    source: Optional[List[VulnerabilitySource]] = Field(
        default=None,
        description="Sources to include"
    )
    fixed_in_version: Optional[str] = Field(
        default=None,
        description="Search for vulnerabilities fixed in this version"
    )
    affected_in_version: Optional[str] = Field(
        default=None,
        description="Search for vulnerabilities affecting this version"
    )
    published_after: Optional[datetime] = Field(
        default=None,
        description="Search for vulnerabilities published after this date"
    )
    published_before: Optional[datetime] = Field(
        default=None,
        description="Search for vulnerabilities published before this date"
    )
    tags: Optional[List[str]] = Field(
        default=None,
        description="Tags to search for"
    )
    text_search: Optional[str] = Field(
        default=None,
        description="Free text search in title and description"
    )
    limit: int = Field(
        default=100,
        description="Maximum number of results to return"
    )
    offset: int = Field(
        default=0,
        description="Offset for pagination"
    )

class VulnerabilityDatabaseUpdateRequest(BaseModel):
    """
    Request to update the vulnerability database
    """
    sources: List[VulnerabilitySource] = Field(
        default_factory=lambda: list(VulnerabilitySource),
        description="Sources to update from"
    )
    force_update: bool = Field(
        default=False,
        description="Force update even if not scheduled"
    )
