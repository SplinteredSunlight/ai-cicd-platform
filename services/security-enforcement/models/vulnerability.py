from pydantic import BaseModel, Field
from typing import List, Optional
from enum import Enum

class SeverityLevel(str, Enum):
    CRITICAL = "CRITICAL"
    HIGH = "HIGH"
    MEDIUM = "MEDIUM"
    LOW = "LOW"
    INFO = "INFO"
    UNKNOWN = "UNKNOWN"

class Vulnerability(BaseModel):
    """
    Standardized vulnerability model across different security scanners
    """
    id: str = Field(..., description="Unique identifier for the vulnerability (e.g., CVE ID)")
    title: str = Field(..., description="Short title describing the vulnerability")
    description: str = Field(..., description="Detailed description of the vulnerability")
    severity: SeverityLevel = Field(..., description="Severity level of the vulnerability")
    cvss_score: float = Field(..., ge=0.0, le=10.0, description="CVSS score (0.0-10.0)")
    affected_component: str = Field(..., description="Component affected by the vulnerability")
    fix_version: Optional[str] = Field(None, description="Version that fixes the vulnerability")
    references: List[str] = Field(default_factory=list, description="Related references and documentation")

    class Config:
        json_schema_extra = {
            "example": {
                "id": "CVE-2021-44228",
                "title": "Log4Shell",
                "description": "Remote code execution vulnerability in Log4j",
                "severity": "CRITICAL",
                "cvss_score": 10.0,
                "affected_component": "org.apache.logging.log4j:log4j-core@2.14.1",
                "fix_version": "2.15.0",
                "references": [
                    "https://nvd.nist.gov/vuln/detail/CVE-2021-44228",
                    "https://logging.apache.org/log4j/2.x/security.html"
                ]
            }
        }

class VulnerabilityReport(BaseModel):
    """
    Comprehensive vulnerability report from a security scan
    """
    scanner_name: str = Field(..., description="Name of the security scanner")
    scan_timestamp: str = Field(..., description="ISO timestamp of when the scan was performed")
    target: str = Field(..., description="Target that was scanned (e.g., container image, filesystem)")
    vulnerabilities: List[Vulnerability] = Field(default_factory=list, description="List of found vulnerabilities")
    summary: dict = Field(
        default_factory=lambda: {
            "CRITICAL": 0,
            "HIGH": 0,
            "MEDIUM": 0,
            "LOW": 0,
            "INFO": 0,
            "UNKNOWN": 0
        },
        description="Summary count of vulnerabilities by severity"
    )
    metadata: dict = Field(
        default_factory=dict,
        description="Additional scanner-specific metadata"
    )

    def update_summary(self):
        """
        Update the summary counts based on vulnerabilities
        """
        self.summary = {severity: 0 for severity in SeverityLevel}
        for vuln in self.vulnerabilities:
            self.summary[vuln.severity] += 1

    class Config:
        json_schema_extra = {
            "example": {
                "scanner_name": "trivy",
                "scan_timestamp": "2025-02-23T11:53:00Z",
                "target": "nginx:latest",
                "vulnerabilities": [
                    {
                        "id": "CVE-2021-44228",
                        "title": "Log4Shell",
                        "description": "Remote code execution vulnerability in Log4j",
                        "severity": "CRITICAL",
                        "cvss_score": 10.0,
                        "affected_component": "org.apache.logging.log4j:log4j-core@2.14.1",
                        "fix_version": "2.15.0",
                        "references": [
                            "https://nvd.nist.gov/vuln/detail/CVE-2021-44228"
                        ]
                    }
                ],
                "summary": {
                    "CRITICAL": 1,
                    "HIGH": 0,
                    "MEDIUM": 0,
                    "LOW": 0,
                    "INFO": 0,
                    "UNKNOWN": 0
                },
                "metadata": {
                    "scan_duration": 12.5,
                    "db_version": "20250223"
                }
            }
        }
